{"attributes":{"backlinks":[{"tag":"document","title":"FeatureRegistries.jl","docid":"documents/README.md"},{"tag":"documentation","title":"FeatureRegistries","docid":"references/FeatureRegistries"},{"tag":"documentation","title":"find","docid":"references/FeatureRegistries.find"}],"path":"/home/runner/.julia/packages/FeatureRegistries/o8XgC/docs/using.md","title":"Using registries"},"tag":"document","children":[{"attributes":{},"tag":"md","children":[{"attributes":{},"tag":"h1","children":["Using registries"],"type":"node"},{"attributes":{"class":"subtitle"},"tag":"p","children":["This page gives an overview of how to use registries to list and search for features."],"type":"node"},{"attributes":{},"tag":"p","children":["A feature registry is a ",{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.Registry"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["Registry"],"type":"node"}],"type":"node"}," object that a package makes available to its users so that they can discover the package’s features. Let’s look at an example registry:"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"USING","children":[{"attributes":{},"tag":"USING","children":["using"],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries"},"tag":"reference","children":["FeatureRegistries"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["registry"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries"},"tag":"reference","children":["FeatureRegistries"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.exampleregistry"},"tag":"reference","children":["exampleregistry"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"mimes":{"text/html":"<table>\n  <caption style = \"text-align: left;\">Mathematical functions</caption>\n  <thead>\n    <tr class = \"header\">\n      <th style = \"text-align: left;\">ID</th>\n      <th style = \"text-align: left;\">Category</th>\n      <th style = \"text-align: left;\">Function instance</th>\n    </tr>\n    <tr class = \"subheader headerLastRow\">\n      <th style = \"text-align: left;\">:id</th>\n      <th style = \"text-align: left;\">:category</th>\n      <th style = \"text-align: left;\">:instance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"sin\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">sin (generic function with 14 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"tan\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">tan (generic function with 13 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"cos\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">cos (generic function with 14 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"log2\"</span></td>\n      <td style = \"text-align: left;\">:logarithmic</td>\n      <td style = \"text-align: left;\">log2 (generic function with 9 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"log\"</span></td>\n      <td style = \"text-align: left;\">:logarithmic</td>\n      <td style = \"text-align: left;\">log (generic function with 24 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"log1p\"</span></td>\n      <td style = \"text-align: left;\">:logarithmic</td>\n      <td style = \"text-align: left;\">log1p (generic function with 10 methods)</td>\n    </tr>\n  </tbody>\n</table>\n"},"type":"leaf"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Each entry in a field consists of multiple fields, one of which is a unique ID. We can get more information on a registry’s fields using ",{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.info"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["info"],"type":"node"}],"type":"node"},":"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.info"},"tag":"reference","children":["info"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["registry"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"Fields in registry &quot;Mathematical functions&quot;\n <span class=\"sgr1\"> Name              </span> <span class=\"sgr1\"> Column    </span> <span class=\"sgr1\"> Type     </span> <span class=\"sgr1\"> Description                           </span>\n  ID                  <span class=\"sgr31\"><span class=\"sgr1\">:id (ID) </span></span>   <span class=\"sgr90\">String  </span>\n  Category            :category   <span class=\"sgr90\">Symbol  </span>   The category of mathematical function\n  Function instance   :instance   <span class=\"sgr90\">Function</span>   The Julia function object\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["We can see that the ",{"attributes":{},"tag":"code","children":[":id"],"type":"node"}," column gives each entry’s unique ID."],"type":"node"},{"attributes":{},"tag":"h2","children":["Loading features"],"type":"node"},{"attributes":{},"tag":"p","children":["We can index into the registry with a valid ID to get a ",{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.RegistryEntry"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["RegistryEntry"],"type":"node"}],"type":"node"},":"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["entry"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"REF","children":[{"attributes":{},"tag":"IDENTIFIER","children":["registry"],"type":"node"},{"attributes":{},"tag":"LSQUARE","children":["["],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["log"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"RSQUARE","children":["]"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"RegistryEntry(<span class=\"sgr1\">                                                                    </span>\n          id  =  <span class=\"sgr32\">&quot;log&quot;                                 </span>  <span class=\"sgr90\">(String)  </span>\n    category  =  :logarithmic                            <span class=\"sgr90\">(Symbol)  </span>\n    instance  =  log (generic function with 24 methods)  <span class=\"sgr90\">(Function)</span>\n)"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["Each of the fields can be accessed using property syntax:"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"TUPLE","children":[{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["entry"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["id"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["entry"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["category"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"DOT","children":[{"attributes":{},"tag":"IDENTIFIER","children":["entry"],"type":"node"},{"attributes":{},"tag":"DOT","children":["."],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"IDENTIFIER","children":["instance"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"(&quot;log&quot;, :logarithmic, log)"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["For every kind of feature, there should be a canonical way to load that functionality for usage. For example, in a registry of datasets loading an entry could mean downloading and unpacking the data to return a local file path. Different registries will have different loading behavior which can be invoked by calling ",{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.load"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["load"],"type":"node"}],"type":"node"}," on an entry."],"type":"node"},{"attributes":{},"tag":"p","children":["In the above toy example, after finding a suitable function, we want to call it, so ",{"attributes":{},"tag":"code","children":["load"],"type":"node"}," returns the Julia object:"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"EQ","children":[{"attributes":{},"tag":"IDENTIFIER","children":["fn"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.load"},"tag":"reference","children":["load"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["entry"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["fn"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["ℯ"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"attributes":{},"tag":"codeblock","children":[{"mimes":{"text/html":"1"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"h2","children":["Searching for features"],"type":"node"},{"attributes":{},"tag":"p","children":["A large registry with many entries and columns can quickly become unwieldy when searching for features. Using ",{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.find"},"tag":"reference","children":[{"attributes":{},"tag":"code","children":["find"],"type":"node"}],"type":"node"}," (or ",{"attributes":{},"tag":"code","children":["filter"],"type":"node"},"), we can quickly subset the features based on a registry’s fields."],"type":"node"},{"attributes":{},"tag":"p","children":["We can match fields against exact values:"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"COMMENT","children":["# All entries where the category matches the value"],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.find"},"tag":"reference","children":["find"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["registry"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["category"],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"QUOTE","children":[{"attributes":{},"tag":"COLON","children":[":"],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["trigonometric"],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"mimes":{"text/html":"<table>\n  <caption style = \"text-align: left;\">Mathematical functions</caption>\n  <thead>\n    <tr class = \"header\">\n      <th style = \"text-align: left;\">ID</th>\n      <th style = \"text-align: left;\">Category</th>\n      <th style = \"text-align: left;\">Function instance</th>\n    </tr>\n    <tr class = \"subheader headerLastRow\">\n      <th style = \"text-align: left;\">:id</th>\n      <th style = \"text-align: left;\">:category</th>\n      <th style = \"text-align: left;\">:instance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"sin\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">sin (generic function with 14 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"tan\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">tan (generic function with 13 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"cos\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">cos (generic function with 14 methods)</td>\n    </tr>\n  </tbody>\n</table>\n"},"type":"leaf"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["And some types like ",{"attributes":{},"tag":"code","children":["String"],"type":"node"}," accept additional filters, like a ",{"attributes":{},"tag":"code","children":["Regex"],"type":"node"},":"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.find"},"tag":"reference","children":["find"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["registry"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["id"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"MACROCALL","children":[{"attributes":{},"tag":"STRING_MACRO_NAME","children":["r"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"},{"attributes":{},"tag":"STRING","children":["s"],"type":"node"},{"attributes":{},"tag":"DQUOTE","children":["\""],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"mimes":{"text/html":"<table>\n  <caption style = \"text-align: left;\">Mathematical functions</caption>\n  <thead>\n    <tr class = \"header\">\n      <th style = \"text-align: left;\">ID</th>\n      <th style = \"text-align: left;\">Category</th>\n      <th style = \"text-align: left;\">Function instance</th>\n    </tr>\n    <tr class = \"subheader headerLastRow\">\n      <th style = \"text-align: left;\">:id</th>\n      <th style = \"text-align: left;\">:category</th>\n      <th style = \"text-align: left;\">:instance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"sin\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">sin (generic function with 14 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"cos\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">cos (generic function with 14 methods)</td>\n    </tr>\n  </tbody>\n</table>\n"},"type":"leaf"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"p","children":["We can always filter based on an arbitrary predicate:"],"type":"node"},{"attributes":{"cell":"","lang":"julia"},"tag":"codecell","children":[{"attributes":{},"tag":"codeinput","children":[{"attributes":{"cell":"","lang":"julia"},"tag":"codeblock","children":[{"attributes":{},"tag":"julia","children":[{"attributes":{},"tag":"COMMENT","children":["# Using arbitrary predicates"],"type":"node"},{"attributes":{},"tag":"NEWLINE_WS","children":["\n"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{"reftype":"symbol","document_id":"references/FeatureRegistries.find"},"tag":"reference","children":["find"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["registry"],"type":"node"},{"attributes":{},"tag":"COMMA","children":[","],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"KW","children":[{"attributes":{},"tag":"IDENTIFIER","children":["id"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"EQ","children":["="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"ANON_FUNC","children":[{"attributes":{},"tag":"IDENTIFIER","children":["id"],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"ANON_FUNC","children":["->"],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"CALL","children":[{"attributes":{},"tag":"IDENTIFIER","children":["length"],"type":"node"},{"attributes":{},"tag":"LPAREN","children":["("],"type":"node"},{"attributes":{},"tag":"IDENTIFIER","children":["id"],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"LESS_EQ","children":["<="],"type":"node"},{"attributes":{},"tag":"WHITESPACE","children":[" "],"type":"node"},{"attributes":{},"tag":"INTEGER","children":["3"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"RPAREN","children":[")"],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"},{"attributes":{},"tag":"coderesult","children":[{"mimes":{"text/html":"<table>\n  <caption style = \"text-align: left;\">Mathematical functions</caption>\n  <thead>\n    <tr class = \"header\">\n      <th style = \"text-align: left;\">ID</th>\n      <th style = \"text-align: left;\">Category</th>\n      <th style = \"text-align: left;\">Function instance</th>\n    </tr>\n    <tr class = \"subheader headerLastRow\">\n      <th style = \"text-align: left;\">:id</th>\n      <th style = \"text-align: left;\">:category</th>\n      <th style = \"text-align: left;\">:instance</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"sin\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">sin (generic function with 14 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"tan\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">tan (generic function with 13 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"cos\"</span></td>\n      <td style = \"text-align: left;\">:trigonometric</td>\n      <td style = \"text-align: left;\">cos (generic function with 14 methods)</td>\n    </tr>\n    <tr>\n      <td style = \"text-align: left;\"><span style=\"color:#073;\">\"log\"</span></td>\n      <td style = \"text-align: left;\">:logarithmic</td>\n      <td style = \"text-align: left;\">log (generic function with 24 methods)</td>\n    </tr>\n  </tbody>\n</table>\n"},"type":"leaf"}],"type":"node"}],"type":"node"}],"type":"node"}],"type":"node"}